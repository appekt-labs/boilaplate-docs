import{_ as t,c as o,a0 as a,o as n}from"./chunks/framework.XulkbXWZ.js";const h=JSON.parse('{"title":"Features of BoilaPlate","description":"","frontmatter":{},"headers":[],"relativePath":"features.md","filePath":"features.md"}'),s={name:"features.md"};function r(i,e,l,u,g,d){return n(),o("div",null,e[0]||(e[0]=[a('<h1 id="features-of-boilaplate" tabindex="-1">Features of <strong>BoilaPlate</strong> <a class="header-anchor" href="#features-of-boilaplate" aria-label="Permalink to &quot;Features of **BoilaPlate**&quot;">​</a></h1><p>Welcome to <strong>BoilaPlate</strong>, the ultimate starting point for your Next.js projects. This template includes all the essential features you need to build scalable, secure, and feature-rich web applications in no time. Below, we highlight the core features that make <strong>BoilaPlate</strong> stand out.</p><h2 id="_1-authentication-with-nextauth" tabindex="-1">1. <strong>Authentication with NextAuth</strong> <a class="header-anchor" href="#_1-authentication-with-nextauth" aria-label="Permalink to &quot;1. **Authentication with NextAuth**&quot;">​</a></h2><p>Secure, customizable, and ready-to-use authentication flows for sign-up, sign-in, and password management.</p><ul><li><strong>Pre-built Pages</strong>: <code>/auth/signin</code>, <code>/auth/register</code>, <code>/auth/forgot-password</code>, and <code>/auth/reset-password</code></li><li><strong>Secure Session Handling</strong>: Authenticated sessions via cookies and tokens.</li><li><strong>User Registration</strong>: Custom <code>/auth/register</code> route for user sign-ups, which <strong>NextAuth</strong> doesn’t support out of the box.</li><li><strong>Resend Integration</strong>: Emails are sent using <strong>Resend</strong>, and email templates are beautifully designed using <strong>React Email</strong>.</li><li><strong>MongoDB Storage</strong>: User data is stored securely in MongoDB, integrated seamlessly with authentication flows.</li></ul><p><strong>Time Saved</strong>: Up to 10 hours of development!</p><hr><h2 id="_2-dashboard-with-premium-features" tabindex="-1">2. <strong>Dashboard with Premium Features</strong> <a class="header-anchor" href="#_2-dashboard-with-premium-features" aria-label="Permalink to &quot;2. **Dashboard with Premium Features**&quot;">​</a></h2><p>A clean, basic dashboard layout is provided to help users manage their accounts. Built-in support for premium accounts and a seamless upgrade flow.</p><ul><li><strong>Premium Badge</strong>: Users who upgrade via <strong>Lemon Squeezy</strong> get a &quot;Premium&quot; badge in their dashboard.</li><li><strong>Upgrade to Premium</strong>: The <code>/dashboard</code> page includes a direct link to purchase premium features through <strong>Lemon Squeezy</strong> integration.</li><li><strong>Logout Functionality</strong>: Users can securely log out from the dashboard.</li></ul><p><strong>Time Saved</strong>: Up to 5 hours with ready-to-use navigation and authentication handling.</p><hr><h2 id="_3-email-integration-with-resend" tabindex="-1">3. <strong>Email Integration with Resend</strong> <a class="header-anchor" href="#_3-email-integration-with-resend" aria-label="Permalink to &quot;3. **Email Integration with Resend**&quot;">​</a></h2><p>Seamless integration for email notifications and password resets via the <strong>Resend</strong> API. Custom email templates are designed with <strong>@react-email/components</strong>, providing flexibility and beautiful designs.</p><ul><li><strong>Pre-configured Emails</strong>: Forgot password, account verification, and custom notifications.</li><li><strong>React Email Components</strong>: Easily editable email templates using the power of React.</li></ul><p><strong>Time Saved</strong>: No need to set up your own email service; this saves 3-4 hours of manual email integration.</p><hr><h2 id="_4-mdx-blog-system" tabindex="-1">4. <strong>MDX Blog System</strong> <a class="header-anchor" href="#_4-mdx-blog-system" aria-label="Permalink to &quot;4. **MDX Blog System**&quot;">​</a></h2><p>A fully functional blog system is included with <strong>MDX</strong> support, allowing you to write content in markdown with React components.</p><ul><li><strong>Integrated with @next/mdx</strong>: Ready-to-use markdown for building content-rich blogs.</li><li><strong>Custom MDX Components</strong>: Extendable with your own components via the <code>mdx-components.tsx</code> file.</li><li><strong>Optimized Rendering</strong>: Parse MDX pages into React components for better performance and flexibility.</li></ul><p><strong>Time Saved</strong>: Writing a markdown-powered blog from scratch takes time, but <strong>BoilaPlate</strong> saves you at least 6-7 hours.</p><hr><h2 id="_5-mongodb-integration" tabindex="-1">5. <strong>MongoDB Integration</strong> <a class="header-anchor" href="#_5-mongodb-integration" aria-label="Permalink to &quot;5. **MongoDB Integration**&quot;">​</a></h2><p>Out-of-the-box integration with MongoDB, making it easy to store and manage your app’s data. Full CRUD support is already set up.</p><ul><li><strong>User Data</strong>: Authentication and profile data are stored securely.</li><li><strong>Subscription Management</strong>: Store user subscription status when upgraded via <strong>Lemon Squeezy</strong>.</li><li><strong>Flexible Database Schema</strong>: Modify and expand your MongoDB schemas easily using <strong>Prisma ORM</strong> if necessary.</li></ul><p><strong>Time Saved</strong>: Save 4-5 hours of setup time by not having to manually configure MongoDB.</p><hr><h2 id="_6-payment-integration-with-lemon-squeezy" tabindex="-1">6. <strong>Payment Integration with Lemon Squeezy</strong> <a class="header-anchor" href="#_6-payment-integration-with-lemon-squeezy" aria-label="Permalink to &quot;6. **Payment Integration with Lemon Squeezy**&quot;">​</a></h2><p>Monetize your application with the powerful <strong>Lemon Squeezy</strong> payment integration. Users can upgrade to premium with a simple checkout flow.</p><ul><li><strong>Checkout Flow</strong>: Fully functional purchase route (<code>/api/purchase-product</code>) that creates a checkout session.</li><li><strong>Webhook Integration</strong>: Automatically update user subscriptions when payments are successful using a webhook (<code>/api/webhooks/lemon-squeezy</code>).</li><li><strong>Secure Payment Processing</strong>: Payments are handled securely with Lemon Squeezy’s API, removing the complexity of building your own payment system.</li></ul><hr><h2 id="_7-ready-to-use-profile-and-waitlist-pages" tabindex="-1">7. <strong>Ready-to-Use Profile and Waitlist Pages</strong> <a class="header-anchor" href="#_7-ready-to-use-profile-and-waitlist-pages" aria-label="Permalink to &quot;7. **Ready-to-Use Profile and Waitlist Pages**&quot;">​</a></h2><p>Additional utility pages for user profile management and capturing waitlist sign-ups for new features or product launches.</p><ul><li><strong>User Profile Management</strong>: <code>/dashboard/profile</code> allows users to update their email, password, and personal info.</li><li><strong>Waitlist Page</strong>: <code>/wait-list</code> captures user interest and stores data securely in MongoDB for future marketing.</li></ul><p><strong>Time Saved</strong>: At least 3-4 hours saved by using pre-configured profile and waitlist management features.</p><hr><h2 id="_8-landing-page" tabindex="-1">8. <strong>Landing Page</strong> <a class="header-anchor" href="#_8-landing-page" aria-label="Permalink to &quot;8. **Landing Page**&quot;">​</a></h2><p>A beautifully designed and responsive landing page is included, saving you time on building your site’s homepage from scratch.</p><ul><li><strong>Customizable Hero Section</strong>: Quickly update the hero content and add call-to-action buttons.</li><li><strong>Feature Highlights</strong>: Showcase your product&#39;s key features with pre-built feature sections.</li><li><strong>Responsive Design</strong>: Mobile-first, responsive layout to ensure your landing page looks great on all devices.</li></ul><p><strong>Time Saved</strong>: Design and development of a responsive landing page can take 10-15 hours, but it’s already done for you.</p><hr><h2 id="_9-extensible-folder-structure" tabindex="-1">9. <strong>Extensible Folder Structure</strong> <a class="header-anchor" href="#_9-extensible-folder-structure" aria-label="Permalink to &quot;9. **Extensible Folder Structure**&quot;">​</a></h2><p>A scalable folder structure that grows with your application. All files are organized and follow industry best practices.</p><ul><li><strong><code>src/app</code></strong>: Pages and API routes live here for clean separation.</li><li><strong><code>components/</code></strong>: All reusable UI components are placed in one folder for easy management.</li><li><strong><code>lib/</code></strong>: Utility functions, services, and APIs are grouped under <code>lib/</code> to avoid clutter.</li><li><strong><code>db/</code></strong>: Database schemas and models.</li><li><strong><code>public/</code></strong>: Static assets such as images.</li></ul><p><strong>Time Saved</strong>: Save countless hours by not having to set up your own project structure.</p><hr><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>By using <strong>BoilaPlate</strong>, you are saving at least <strong>40-50 hours</strong> of work that would otherwise go into building these essential features from scratch. With authentication, payments, email integration, blogs, and much more already implemented, <strong>BoilaPlate</strong> is the best starting point for your Next.js project.</p><p>Make sure to check out the full documentation for detailed usage instructions, and get started with <strong>BoilaPlate</strong> today!</p>',49)]))}const p=t(s,[["render",r]]);export{h as __pageData,p as default};
